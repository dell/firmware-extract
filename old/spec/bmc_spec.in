
# example of how to use this spec file to build a BMC RPM:
# rpmbuild   
#	--define "safe_name bmc_firmware_ven_0x1028_dev_0x0183"   
#	--define "name bmc_firmware(ven_0x1028_dev_0x0183)"   
#	--define "vendor_id 0x1028"   
#	--define "device_id 0x0183"   
#	--define "version a05"   
#	--define "shortname PE1800"   
#	--define "revision 1"   
#	-bb /home/michael_e_brown/spec/bmc_spec.in

# if passed a "shortname" variable, obsolete older, generated name
%{?shortname:  %{expand: %%define oldname_exists 1}}
%{!?shortname: %{expand: %%define oldname_exists 0}}

# if not passed a "shortname", generate one
%{?shortname: %{expand: %%define system_shortname %{shortname} }}
%{!?shortname: %{expand: %%define system_shortname ven_%{vendor_id}_dev_%{device_id} }}

Summary:   BMC Firmware upgrade package for System: %{system_shortname}
Name:      bmc_firmware_%{system_shortname}
Version:   %{rpm_version}
Release:   18%{?revision:.%{revision}}
Vendor:    Dell
License:   Proprietary
Group:     System Environment/Base
BuildArch: noarch
BuildRoot: %{_tmppath}/%{name}-%{rpm_version}-%{release}-%(id -u)-buildroot/
Source0:   %{safe_name}-%{rpm_version}.tar.bz2

Requires:  firmware-addon-dell >= 0:1.1
Requires:  firmware-tools >= 0:1.1
#Requires:  dell-bmc-blacklist
Provides:  bmc_firmware(ven_%{vendor_id}_dev_%{device_id}) = %{rpm_version}-%{release}
Requires:  dell-bmcflash

%if %{oldname_exists}
Obsoletes: bmc_firmware_ven_%{vendor_id}_dev_%{device_id} < %{version}-%{release}
Provides:  bmc_firmware_ven_%{vendor_id}_dev_%{device_id} = %{version}-%{release}
%endif

%description
This package contains BMC Firmware update version %{dell_version} (%{vendor_version}) for System %{system_shortname}

This is an _UNOFFICIAL_ package, not supported by Dell. Do not call Dell 
technical support concerning this package, because you will not get help there.
Please use the mailing lists for support. firmware-tools-devel@lists.us.dell.com 
would be a good place to start.

If this package is useful to you, feedback is appreciated.

%prep
%setup -n %{safe_name}_version_%{dell_version}

%build

%install
if [ "$RPM_BUILD_ROOT" != "/" ]; then
	rm -rf $RPM_BUILD_ROOT
fi
mkdir -p $RPM_BUILD_ROOT/%{_datadir}/firmware/bmc/%{safe_name}_version_%{dell_version}/
install -m 644 bmc*        $RPM_BUILD_ROOT/%{_datadir}/firmware/bmc/%{safe_name}_version_%{dell_version}/ 
install -m 644 package.ini $RPM_BUILD_ROOT/%{_datadir}/firmware/bmc/%{safe_name}_version_%{dell_version}/
install -m 644 package.xml $RPM_BUILD_ROOT/%{_datadir}/firmware/bmc/%{safe_name}_version_%{dell_version}/ || true


%clean
if [ "$RPM_BUILD_ROOT" != "/" ]; then
	rm -rf $RPM_BUILD_ROOT
fi

%files
%defattr(-,root,root)
#%# doc dell-std-license.txt
%{_datadir}/firmware/bmc/

%posttrans 
# only attempt to update after we have gotten to the end of the
# transaction and all the requisite rpms have been installed. we might
# have deps on other rpms.
/usr/bin/update_firmware --rpm -y
